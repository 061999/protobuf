name: Run a Docker/Bazel workflow

on:
  workflow_call:
    inputs:
      name:
        required: True
        description: "The name to display for the test"
        type: string
      targets:
        required: true
        description: "The targets to test."
        type: string
      image:
        required: false
        default: 'us-docker.pkg.dev/protobuf-build/containers/common/linux/bazel:5.1.1-aec4d74f2eb6938fc53ef7d9a79a4bf2da24abc1'
        description: "The docker image to use."
        type: string
      flags:
        required: false
        default: ''
        description: "Extra flags to pass to Bazel."
        type: string
      emulate:
        required: false
        default: ''
        description: "Architecture to emulate using QEMU"
        type: string
      cache:
        required: true
        description: "A unique path for where to store the bazel cache."
        type: string
      checkout:
        required: true
        description: "The SHA key for the commit we want to run over"
        type: string

jobs:
  run:
    name: ${{ inputs.name }}
    timeout-minutes: 120
    runs-on: ubuntu-latest
    steps:
      - name: Checkout pending changes
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.checkout }}

      - name: Setup QEMU if we're emulating
        if: ${{ inputs.emulate }}
        id: qemu-arm64
        uses: docker/setup-qemu-action@v1


      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GAR_SERVICE_ACCOUNT }}
          export_environment_variables: true
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
      - name: Use gcloud CLI
        run: gcloud info
      - name: Authenticate for GAR use
        run: gcloud auth configure-docker -q us-docker.pkg.dev

      - name: Set up Bazel caching
        run: >
          echo "BAZEL_CACHE=
          --google_credentials=/workspace/$(basename $GOOGLE_APPLICATION_CREDENTIALS)
          --remote_upload_local_results
          --remote_cache=https://storage.googleapis.com/protobuf-bazel-cache/protobuf/gha/${{ inputs.cache }}" >> $GITHUB_ENV
        if: ${{ inputs.cache }}

      - name: Check docker cache
        id: check-docker-cache
        uses: actions/cache@v3
        with:
          path: ci/docker/
          key: ${{ inputs.image }}
      - name: Pull and store if cache miss
        if: steps.check-docker-cache.outputs.cache-hit != 'true'
        run: >
          docker pull ${{ inputs.image }} &&
          mkdir -p ci/docker/$(dirname ${{ inputs.image }}) &&
          docker image save ${{ inputs.image }} --output ./ci/docker/${{ inputs.image }}.tar
      - name: Use the cached image on cache hit
        if: steps.check-docker-cache.outputs.cache-hit == 'true'
        run: docker image load --input ./ci/docker/${{ inputs.image }}.tar

      - name: Run tests
        run: >
          docker run -v${{ github.workspace }}:/workspace ${{ inputs.image }}
          test --keep_going --test_output=errors --test_timeout=600 $BAZEL_CACHE
          ${{ inputs.flags }} ${{ inputs.targets }}
