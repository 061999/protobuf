#!/bin/bash
#
# This script sets up a Kokoro MacOS worker for running Protobuf tests

set -eux

export HOMEBREW_PREFIX=$(brew --prefix)

##
# Select Xcode version

##
# Select Xcode version
export DEVELOPER_DIR=/Applications/Xcode_13.3.1.app/Contents/Developer
sudo xcode-select -s "${DEVELOPER_DIR}"

##
# Select C/C++ compilers

export CC=gcc
export CXX=g++

##
# Brew: update, then upgrade the installed tools to current version and install
# some needed ones not in the Kokoro base image. This ensure current versions
# of CMake, autotools, etc.

# But first...
#
# The transitive deps of the installed tools need protobuf, but Kokoro manually
# installed it outside of brew so it needs to be removed so brew can install the
# tools (and a newer version of protobuf). g/kokoro-users/7FRvQMUdN40 about why
# it is a manual install vs. a brew install in the first place.
sudo rm -rf \
    /usr/local/include/google/protobuf \
    /usr/local/bin/protoc
# Likewise, updating python can have issues because of some existing binaries.
sudo rm -rf \
    /usr/local/bin/2to3* \
    /usr/local/bin/idle3* \
    /usr/local/bin/pip3 \
    /usr/local/bin/pydoc3* \
    /usr/local/bin/python3* \
    /usr/local/bin/pyvenv*

git -C /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core fetch --unshallow
git -C /usr/local/Homebrew/Library/Taps/homebrew/homebrew-cask fetch --unshallow

brew update
brew upgrade

##
# Install Ruby

if [[ "${KOKORO_INSTALL_RUBY:-}" == "yes" ]] ; then
  brew install ruby
fi

##
# Install Cocoapods

if [[ "${KOKORO_INSTALL_COCOAPODS:-}" == "yes" ]] ; then
  # The existing cocoapods was installed via gem, but that doesn't work well
  # with the overlap in deps with things managed by brew (errors around ruby
  # versions, etc.); so remove it and install in via brew instead.
  gem uninstall -a "$(gem list | grep cocoapods | cut -d ' ' -f 1)"
  brew install cocoapods
fi

##
# Install Tox

if [[ "${KOKORO_INSTALL_TOX:-}" == "yes" ]] ; then
  pyenv install -v -s 3.7.13
  pyenv global 3.7.13
  sudo python -m pip install --upgrade pip tox tox-pyenv
fi

##
# Setup RVM
if [[ "${KOKORO_INSTALL_RVM:-}" == "yes" ]] ; then
    git config --global --add safe.directory $HOMEBREW_PREFIX/Library/Taps/homebrew/homebrew-cask
    git config --global --add safe.directory $HOMEBREW_PREFIX/Library/Taps/homebrew/homebrew-core
    git config --global --add safe.directory $HOMEBREW_PREFIX/Library/Taps/homebrew/homebrew-services
    sudo chown -R $(whoami) $HOME/.rvm/
fi
